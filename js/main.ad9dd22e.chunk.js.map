{"version":3,"sources":["socket.js","CreateAccountForm.js","fakeData.js","isUserOffline.js","database.js","AccountInfo.js","App.js","Difference.js","LocalStorage.js","Routes.js","reportWebVitals.js","index.js"],"names":["database","Dexie","version","stores","onlineAccount","CREATE_ACCOUNT","socket","WebSocket","send","event","data","JSON","stringify","onopen","console","log","currentTarget","url","onerror","error","listen","eventName","callback","onmessage","parse","formatResponse","CreateAccountForm","onCreated","onClose","useState","name","setName","email","setEmail","phone","setPhone","bvn","setBvn","address","setAddress","dob","setDob","getValue","target","value","className","id","placeholder","onKeyUp","onChange","type","onClick","timeSent","Date","now","alert","generateFakeData","faker","findName","internet","random","number","secondaryAddress","phoneNumber","size","ind","push","generatedAt","IsUserOffline","isOffline","setIsOffline","navigator","onLine","window","addEventListener","e","table","backend","createBulk","useLocalStorage","timeStart","oldData","localStorage","getItem","newData","setItem","bulkPut","then","lastKey","getData","displayStart","toArray","records","clearData","clear","catch","AccountInfo","title","image","App","form","setForm","createAt","setCreateAt","sortedIn","displayAt","setDisplayAt","numberOfData","setNumberOfData","dbData","setDbData","account","newAccount","isLoading","setIsLoading","setTimeout","Math","abs","toFixed","style","maxWidth","margin","display","width","justifyContent","time","background","map","item","Difference","createAtIndexDb","setCreateAtIndexDB","displayAtIndexDb","setDisplayAtIndexDB","href","LocalStorageApp","Routes","exact","path","component","role","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad9dd22e.chunk.js","sourcesContent":["import Dexie from 'dexie';\n\nconst database = new Dexie('woven-finance-db');\ndatabase.version(1).stores({\n    onlineAccount: `++id,timestamp,name,dob,email,phone,address,bvn,generatedAt`,\n});\nconst config = {\n backend: 'https://woven-db2.herokuapp.com',\n socket: 'wss://woven-db2.herokuapp.com',\n database\n}\n\nconst CREATE_ACCOUNT = 'CREATE_ACCOUNT';\nconst GET_NEW_ACCOUNT = 'GET_NEW_ACCOUNT';\n\nlet baseURL =  config.socket\n// const socket = openSocket(baseURL);\nconst socket = new WebSocket(baseURL);\n// Show a connected message when the WebSocket is opened.\nsocket.onopen = function(event) {\n  console.log( 'Connected to: ' + event.currentTarget.url);\n};\n\nfunction send(event, data) {\n  return socket.send(JSON.stringify({ event, data}));\n}\nfunction formatResponse (data) {\n  return JSON.parse(data)\n}\nsocket.onerror = function(error) {\n  console.log('WebSocket Error: ' + error);\n};\nexport const listen = (eventName, callback) => {\n  socket.onmessage = function(event) {\n    const data = formatResponse(event.data);\n    console.log(data, eventName)\n    if (data.event === eventName) {\n      callback(data.data)\n    }\n    // callback(event)\n  }\n}\n\nexport const getNewAccount = (callback) => {\n  try {\n  listen(GET_NEW_ACCOUNT, callback)\n  } catch (e) {\n    console.log(e)\n  }\n}\n\n\nexport const createAccount = (data, callback) => {\n  send(CREATE_ACCOUNT, data);\n  listen(CREATE_ACCOUNT, callback)\n}\nexport const dropRecord = (callback) => {\n  send('DROP_TABLE', 'as');\n  listen('DROP_TABLE', callback)\n\n}\n","import { useState } from \"react\";\nimport { createAccount } from \"./socket\";\n\nexport default function CreateAccountForm({ onCreated, onClose }) {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [bvn, setBvn] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n\n  const getValue = (callback) => (event) => {\n    callback(event.target.value);\n  };\n  function submitForm() {\n    createAccount({\n      name,email, phone, bvn,address,dob, timeSent: Date.now()\n    }, (data) => {\n      if (data.error) {\n        alert(data.error)\n      } else {\n        onCreated(data)\n        onClose(false)\n      }\n      console.log({data})\n    })\n  }\n  return (\n    <div className=\"form-wrapper\">\n      <form>\n        <div className=\"header\"> Create Account </div>\n        <div className=\"content\">\n          <input\n            id=\"name\"\n            placeholder=\"Full name\"\n            onKeyUp={getValue(setName)}\n            onChange={getValue(setName)}\n          />\n          <input\n            id=\"email\"\n            placeholder=\"Email Address\"\n            onKeyUp={getValue(setEmail)}\n            onChange={getValue(setEmail)}\n          />\n          <input\n            id=\"phone\"\n            placeholder=\"Phone number\"\n            onKeyUp={getValue(setPhone)}\n            onChange={getValue(setPhone)}\n          />\n          <input id=\"bvn\" placeholder=\"BVN\"  onChange={getValue(setBvn)} onKeyUp={getValue(setBvn)} />\n          <input\n            id=\"address\"\n            placeholder=\"address\"\n            onKeyUp={getValue(setAddress)}\n            onChange={getValue(setAddress)}\n          />\n          <input\n            id=\"dob\"\n            placeholder=\"Date of birth\"\n            onKeyUp={getValue(setDob)}\n            onChange={getValue(setDob)}\n          />\n\n          <button type=\"button\" onClick={submitForm}>\n            create Account\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import faker from 'faker/locale/en'\n\nexport const data = {\n name: faker.name.findName(),\n email: faker.internet.email(),\n generatedAt: Date.now(),\n bvn: faker.random.number(9999 * 99991),\n address: faker.address.secondaryAddress(),\n phone: faker.phone.phoneNumber()\n}\nexport const generateFakeData = (size=100) => {\n const data = []\n  for(let ind = 0; ind < size; ind++) {\n    data.push({\n      name: faker.name.findName(),\n      email: faker.internet.email(),\n      generatedAt: Date.now(),\n      bvn: faker.random.number(9999 * 99991),\n      address: faker.address.secondaryAddress(),\n      phone: faker.phone.phoneNumber()\n   })\n  }\n  return data;\n}","import { useState } from \"react\";\n\nexport default function IsUserOffline() {\n  const [isOffline, setIsOffline] = useState(false)\n if (navigator.onLine && isOffline) {\n  setIsOffline(false)\n }\n window.addEventListener('online', function(e) {\n    setIsOffline(false)\n }, false);\n \n window.addEventListener('offline', function(e) {\n    setIsOffline(true)\n}, false);\n  return (\n    \n<div id=\"offline\"className={!isOffline ? 'hide' : ''}>\n  <div className=\"indicator\">.</div>\n</div>\n  );\n}\n ","import Dexie from 'dexie';\n\nconst database = new Dexie('woven-finance-db');\ndatabase.version(1).stores({\n    onlineAccount: `++id,timestamp,name,dob,email,phone,address,bvn,generatedAt`,\n});\nconst config = {\n backend: 'https://woven-db2.herokuapp.com',\n socket: 'ws://woven-db2.herokuapp.com',\n database\n}\n\nexport  const table = config.database.onlineAccount;                                                                                      \n  \n  // table.delete().then(console.log)\nn  export function createBulk(data, callback, useLocalStorage=false) {\n   const timeStart = Date.now();\n   console.log('started transaction @,', {timeStart})\n    if (!useLocalStorage){\n   table.bulkPut(data)\n     .then((lastKey) => {\n       callback ((Date.now() - timeStart) / 1000)\n     })\n    } else {\n      const oldData = JSON.parse(localStorage.getItem('DATABASE') || '[]')\n      const newData = localStorage.setItem('DATABASE', JSON.stringify([...data, ...oldData]));\n      callback((Date.now() - timeStart) / 1000, newData)\n    }\n  }\n\n  export function getData(callback, useLocalStorage=false) {\n    const displayStart = Date.now();\n    if (!useLocalStorage){\n      table.toArray().then(records => {\n        callback((Date.now() - displayStart) / 1000, records)\n      })\n    } else {\n      const data = JSON.parse(localStorage.getItem('DATABASE') || '[]')\n      callback((Date.now() - displayStart) / 1000, data)\n    }\n  }\n\n  export function clearData() {\n    table.clear().catch();\n  }","import { useState } from \"react\";\n\nexport default function AccountInfo({title,image, name, address, dob, phone, email, className, bvn }) {\n  return (\n       <div className=\"profile ${className}\">\n            <div className=\"about\">\n                <div> \n                    <div className=\"title\"> {title || name} </div>\n                    <div> {email} | {phone} </div>\n                    <br />\n                    <div> <strong>BVN:</strong> {bvn} </div>\n                    <div> <strong>DOB:</strong> {dob} </div>\n                    <div> \n                        {address}\n                    </div>\n                </div>\n            </div>\n        </div>\n  );\n}\n","import './App.css';\nimport { useState } from 'react'\nimport CreateAccountForm from './CreateAccountForm';\nimport { generateFakeData } from './fakeData';\nimport IsUserOffline from './isUserOffline';\nimport { clearData, createBulk, getData, table } from './database';\nimport AccountInfo from './AccountInfo';\nimport { dropRecord, getNewAccount, listen } from './socket';\n\nfunction App() {\n  const [form, setForm] = useState(false)\n  const [createAt, setCreateAt] = useState('0')\n  const [sortedIn, setSortedIn] = useState('0')\n  const [displayAt, setDisplayAt] = useState('0')\n  const [numberOfData, setNumberOfData] = useState(0)\n\n  const [dbData, setDbData] = useState(null)\n  const [account, newAccount] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const generateStyle = {\n    maxWidth: \"500px\",\n    margin: \"0 auto\"\n  }\n  const generateData = () => {\n    setIsLoading(true)\n    const size = 100 * 100;\n    const data = generateFakeData(size);\n    setNumberOfData(size)\n    createBulk(data, (time) => {\n      setCreateAt(time)\n      setIsLoading(false)\n    })\n  }\n\n  const viewData = () => {\n    setIsLoading(true)\n    getData((time, data) => {\n      setDisplayAt(time)\n      setDbData(data)\n      setIsLoading(false)\n\n    })\n  }\n  setTimeout(() => {\n    listen('DUMP_TRANSACTION', (data) => {\n      newAccount([ ...data, ...account,])\n    })\n  })\n  const clearDatabase = () => {\n    clearData();\n    dropRecord( (data) => {\n      console.log(data)\n    })\n  }\n  return (\n    <div className=\"App\">\n      <IsUserOffline />\n      <header className=\"title App-header\">\n          <h1>IndexedDB App</h1>\n      </header>\n    {\n      isLoading && <div className=\"loader\"></div>\n    }\n\n    <div className=\"timestamp\"> \n            <div>\n                <span> Created In </span>\n                {Math.abs(createAt).toFixed(3)}\n            </div>\n            <div className=\"created\">\n                <span> SortedIn </span>\n                {Math.abs(sortedIn).toFixed(3)}\n            </div>\n            <div>\n                <span> Displayed withIn </span>\n                { Math.abs(displayAt).toFixed(3) }\n            </div>\n    </div>\n\n      <div style={generateStyle}>\n\n      <div>Generated Records: <span>{numberOfData}</span></div>\n      <br />\n      <div style={{ display: \"flex\", width: \"80%\", justifyContent: \"space-around\"}}>\n      <button onClick={generateData} style={{ margin: \"10px\" }}>generate</button>\n      <button onClick={viewData} style={{ margin: \"10px\", background: \"#123\" }}>display records</button>\n      <button onClick={clearDatabase} style={{ margin: \"10px\", background: \"#db3434\" }}>clear records</button>\n      </div>\n      </div>\n         <h2> IndexedDB accounts </h2>\n\n      <div className=\"profiles\">\n\n          {\n            dbData ? dbData.map(item => <AccountInfo {...item} />) : <span> Not displaying data yet, click on display </span>\n          }\n      </div>\n      \n       { form && <CreateAccountForm onClose={setForm} onCreated={(data) => newAccount([ ...data, ...account,])} /> }\n          \n            <br />\n            <br />\n            <br />\n              <h2> Mongo Database accounts </h2>\n      <div className=\"profiles\">\n          {\n            account && account.map(item => <AccountInfo {...item} />)\n          }\n          </div>\n        \n          <div className=\"add-profile\" onClick={() => setForm(!form)}>{ !form ? \"+\" : \"x\"}</div>\n    </div>\n  );\n}\n\nexport default App;\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport CreateAccountForm from \"./CreateAccountForm\";\nimport { generateFakeData } from \"./fakeData\";\nimport IsUserOffline from \"./isUserOffline\";\nimport { clearData, createBulk, getData, table } from \"./database\";\nimport AccountInfo from \"./AccountInfo\";\nimport { dropRecord, getNewAccount, listen } from \"./socket\";\n\nfunction Difference() {\n  const [form, setForm] = useState(false);\n  const [createAt, setCreateAt] = useState(\"0\");\n  const [displayAt, setDisplayAt] = useState(\"0\");\n\n  const [createAtIndexDb, setCreateAtIndexDB] = useState(\"0\");\n  const [displayAtIndexDb, setDisplayAtIndexDB] = useState(\"0\");\n\n  const [numberOfData, setNumberOfData] = useState(0);\n\n  const [dbData, setDbData] = useState(null);\n  const [account, newAccount] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const generateStyle = {\n    maxWidth: \"500px\",\n    margin: \"0 auto\",\n  };\n\n  const generateData = () => {\n    setIsLoading(true);\n    const size = 100 * 100;\n    const data = generateFakeData(size);\n    setNumberOfData(size);\n    createBulk(\n      data,\n      (time, data) => {\n        setCreateAt(time);\n        setIsLoading(false);\n      },\n      true\n    );\n    createBulk(data, (time, data) => {\n      setCreateAtIndexDB(time);\n      setIsLoading(false);\n    });\n  };\n\n  const viewData = () => {\n    setIsLoading(true);\n    getData((time, data) => {\n      setDisplayAt(time);\n      setIsLoading(false);\n    });\n    getData((time, data) => {\n      setDisplayAtIndexDB(time);\n    }, true);\n  };\n\n  const clearDatabase = () => {\n    clearData();\n  };\n  return (\n    <div className=\"App\">\n      <IsUserOffline />\n      <header className=\"title App-header\">\n        <h1>Difference Between Local and IndexDB Storage</h1>\n      </header>\n      {isLoading && <div className=\"loader\"></div>}\n      <h2> LocalStorage accounts </h2>\n\n      <div className=\"timestamp\">\n        <div>\n          <span> Created In </span>\n          {Math.abs(createAt).toFixed(3)}\n        </div>\n        <div className=\"display\">\n          <span> Displayed withIn </span>\n          {Math.abs(displayAt).toFixed(3)}\n        </div>\n      </div>\n      <h2> IndexDb accounts </h2>\n\n      <div className=\"timestamp\">\n        <div className=\"created\">\n          <span> Created In </span>\n          {Math.abs(createAtIndexDb).toFixed(3)}\n        </div>\n        <div>\n          <span> Displayed withIn </span>\n          {Math.abs(displayAtIndexDb).toFixed(3)}\n        </div>\n      </div>\n\n      <div style={generateStyle} className=\"overflow\">\n        <div>\n          Generated Records: <span>{numberOfData}</span>\n        </div>\n        <br />\n        <div\n          style={{\n            display: \"flex\",\n            width: \"80%\",\n            justifyContent: \"space-around\",\n          }}\n        >\n          <button onClick={generateData} style={{ margin: \"10px\" }}>\n            generate\n          </button>\n          <button\n            onClick={viewData}\n            style={{ margin: \"10px\", background: \"#123\" }}\n          >\n            display records\n          </button>\n          <button\n            onClick={clearDatabase}\n            style={{ margin: \"10px\", background: \"#db3434\" }}\n          >\n            clear records\n          </button>\n        </div>\n      <br />\n      <br />\n          <h4> OTHER URL </h4>\n          <a href=\"/local\"> view LocalStorage App data</a>\n      <br />\n\n          <a href=\"/indexDB\"> view IndexDB App data</a>\n      </div>\n      <h4> Time Difference between IndexDB and LocalStorage </h4>\n\n      <div className=\"timestamp\">\n        <div className=\"created\">\n          <span> Created In </span>\n          {Math.abs(createAtIndexDb - createAt).toFixed(3)}\n        </div>\n        <div>\n          <span> Displayed withIn </span>\n          {Math.abs(displayAtIndexDb - displayAt).toFixed(3)}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Difference;\n","import './App.css';\nimport { useState } from 'react'\nimport CreateAccountForm from './CreateAccountForm';\nimport { generateFakeData } from './fakeData';\nimport IsUserOffline from './isUserOffline';\nimport { clearData, createBulk, getData, table } from './database';\nimport AccountInfo from './AccountInfo';\nimport { dropRecord, getNewAccount, listen } from './socket';\n\nfunction LocalStorageApp() {\n  const [form, setForm] = useState(false)\n  const [createAt, setCreateAt] = useState('0')\n  const [sortedIn, setSortedIn] = useState('0')\n  const [displayAt, setDisplayAt] = useState('0')\n  const [numberOfData, setNumberOfData] = useState(0)\n\n  const [dbData, setDbData] = useState(null)\n  const [account, newAccount] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const generateStyle = {\n    maxWidth: \"500px\",\n    margin: \"0 auto\"\n  }\n  const generateData = () => {\n    setIsLoading(true)\n    const size = 10 * 100;\n    const data = generateFakeData(size);\n    setNumberOfData(size)\n    createBulk(data, (time, data) => {\n      setCreateAt(time)\n      setIsLoading(false)\n    }, true)\n  }\n\n  const viewData = () => {\n    setIsLoading(true)\n    getData((time, data) => {\n      setDisplayAt(time)\n      setDbData(data)\n      setIsLoading(false)\n\n    }, true)\n  }\n  setTimeout(() => {\n    listen('DUMP_TRANSACTION', (data) => {\n      newAccount([ ...data, ...account,])\n    })\n  })\n  const clearDatabase = () => {\n    clearData();\n  }\n  return (\n    <div className=\"App\">\n      <IsUserOffline />\n      <header className=\"title App-header\">\n          <h1>LocalStorage App</h1>\n      </header>\n    {\n      isLoading && <div className=\"loader\"></div>\n    }\n\n    <div className=\"timestamp\"> \n            <div className=\"created\">\n                <span> Created In </span>\n                {createAt.toFixed(3)}\n            </div>\n            <div>\n                <span> SortedIn </span>\n                {sortedIn.toFixed(3)}\n            </div>\n            <div className=\"display\">\n                <span> Displayed withIn </span>\n                {displayAt.toFixed(3)}\n            </div>\n    </div>\n\n      <div style={generateStyle}>\n\n      <div>Generated Records: <span>{numberOfData}</span></div>\n      <br />\n      <div style={{ display: \"flex\", width: \"80%\", justifyContent: \"space-around\"}}>\n      <button onClick={generateData} style={{ margin: \"10px\" }}>generate</button>\n      <button onClick={viewData} style={{ margin: \"10px\", background: \"#123\" }}>display records</button>\n      <button onClick={clearDatabase} style={{ margin: \"10px\", background: \"#db3434\" }}>clear records</button>\n      </div>\n      </div>\n         <h2> LocalStorage accounts </h2>\n\n      <div className=\"profiles\">\n\n          {\n            dbData ? dbData.map(item => <AccountInfo {...item} />) : <span> Not displaying data yet, click on display </span>\n          }\n      </div>\n      \n       { form && <CreateAccountForm onClose={setForm} onCreated={(data) => newAccount([ ...data, ...account,])} /> }\n          \n            <br />\n            <br />\n            <br />\n              <h2> Mongo Database accounts </h2>\n      <div className=\"profiles\">\n          {\n            account && account.map(item => <AccountInfo {...item} />)\n          }\n          </div>\n        \n          <div className=\"add-profile\" onClick={() => setForm(!form)}>{ !form ? \"+\" : \"x\"}</div>\n    </div>\n  );\n}\n\nexport default LocalStorageApp;\n","import React from \"react\";\nimport { Route, Switch,  BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport Difference from \"./Difference\";\nimport LocalStorageApp from \"./LocalStorage\";\n\nexport default function Routes() {\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path={ [\"/\", \"/difference\"]} component={Difference} />\n        <Route exact path={ [ \"/indexDB\"]} component={App} />\n        <Route exact path={ '/:localstoreage' } role=\"user\" component={LocalStorageApp} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}